// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"books_service/controller"
	"books_service/helper"
	"books_service/repository"
	"books_service/service"
	"github.com/google/wire"
	"github.com/julienschmidt/httprouter"
	"net/http"
)

// Injectors from injector.go:

func InitServer() (*http.Server, func(), error) {
	bookRepository := repository.NewBookRepositoryImpl()
	db, cleanup, err := helper.NewDb()
	if err != nil {
		return nil, nil, err
	}
	bookService := service.NewBookServiceImpl(bookRepository, db)
	bookController := controller.NewBookController(bookService)
	router := NewRouter(bookController)
	server := NewServer(router)
	return server, func() {
		cleanup()
	}, nil
}

// injector.go:

var ServerSet = wire.NewSet(helper.NewDb, repository.NewBookRepositoryImpl, service.NewBookServiceImpl, controller.NewBookController, NewRouter,
	NewServer, wire.Bind(new(http.Handler), new(*httprouter.Router)),
)
