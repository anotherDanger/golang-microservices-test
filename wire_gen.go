// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"books_service/controller"
	"books_service/helper"
	"books_service/repository"
	"books_service/service"
	"github.com/google/wire"
	"github.com/julienschmidt/httprouter"
	"net/http"
)

// Injectors from injector.go:

func InitServer() (*http.Server, func(), error) {
	bookRepositoryImpl := repository.NewBookRepositoryImpl()
	db, cleanup, err := helper.NewDb()
	if err != nil {
		return nil, nil, err
	}
	bookServiceImpl := service.NewBookServiceImpl(bookRepositoryImpl, db)
	bookControllerImpl := controller.NewBookController(bookServiceImpl)
	router := NewRouter(bookControllerImpl)
	server := NewServer(router)
	return server, func() {
		cleanup()
	}, nil
}

// injector.go:

var ServerSet = wire.NewSet(helper.NewDb, repository.NewBookRepositoryImpl, wire.Bind(new(repository.BookRepository), new(*repository.BookRepositoryImpl)), service.NewBookServiceImpl, wire.Bind(new(service.BookService), new(*service.BookServiceImpl)), controller.NewBookController, wire.Bind(new(controller.BookController), new(*controller.BookControllerImpl)), NewRouter,
	NewServer, wire.Bind(new(http.Handler), new(*httprouter.Router)),
)
